library(tidyverse)
# Setting seed for reprocibility
set.seed(1)
# Get the data
data <- read_csv("AssignmentOne.csv")



attach(data)
# Take a look at how the glm for the data looks 
#like using the log link and the Gamma distribution
Reg.glm <- glm( y ~ x1 + x2 + x3 + x4 + x5,family=Gamma(link='log') )

# Assign the starting values for the matrices
Xmat <- cbind(1, x1, x2, x3, x4, x5)
Beta.Old <- matrix( 0, nrow=6, ncol=1 )
Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
Vmat.Old <- Dmat.Old^2
Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
Mu.Old <- matrix( exp(Xmat%*%Beta.Old), ncol=1 )
Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%( y - Mu.Old )

# Run the IRLS
Tol <- 1
while( Tol>=1e-06 ){
  
  Beta.Upd <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)%*%t(Xmat)%*%Wmat.Old%*%Z.Old
  Tol <- max( abs(Beta.Upd-Beta.Old) )
  
  Beta.Old <- Beta.Upd
  Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
  Vmat.Old <- Dmat.Old^2
  Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
  Mu.Old <- matrix(exp(Xmat%*%Beta.Old), ncol = 1)
  Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%(y - Mu.Old)
}

# Look at the derived values from the IRLS and compare them to the glm function

summary(Reg.glm)
Beta.Old

sum(log((Z.Old)))
# Getting the standard errors
Se.Mat <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)
sqrt(diag(Se.Mat))
summary (Reg.glm, dispersion =1.0)$coefficients

vcov(Reg.glm)

##  log likelihhod function

y.vec <-  exp(Xmat%*%Beta.Old)
theta.vec <- -1 * (1/y.vec) 
b.theta <- -1* log( - theta.vec) 

log.lik <- sum((y.vec * theta.vec) - b.theta)

y.vec * theta.vec 
aic <- -2*log.lik + 2 *6
bic <- -2 * log.lik + log(nrow(Beta.Old))*6


theta.vec2 <- -1 * (1/y)
b.theta2 <- -1* log( - theta.vec2) 

## Residual deviance
model.saturated <- sum((y * theta.vec2) - b.theta2) 
model.of.interest <- sum((y.vec * theta.vec) - b.theta) 


-2*( model.of.interest - model.saturated)

## Null deviance

Xmat <- matrix(1,200)
Beta.Old <- matrix( 1, nrow=1, ncol=1 )
Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
Vmat.Old <- Dmat.Old^2
Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
Mu.Old <- matrix( exp(Xmat%*%Beta.Old), ncol=1 )
Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%( y - Mu.Old )



# Run the IRLS
Tol <- 1
while( Tol>=1e-06 ){
  
  Beta.Upd <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)%*%t(Xmat)%*%Wmat.Old%*%Z.Old
  Tol <- max( abs(Beta.Upd-Beta.Old) )
  
  Beta.Old <- Beta.Upd
  Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
  Vmat.Old <- Dmat.Old^2
  Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
  Mu.Old <- matrix(exp(Xmat%*%Beta.Old), ncol = 1)
  Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%(y - Mu.Old)
}


summary(Reg.glm)

y.vec <-  exp(Xmat%*%Beta.Old)
theta.vec <- -1 * (1/y.vec) 
b.theta <- -1* log( - theta.vec) 

theta.vec2 <- -1 * (1/y)
b.theta2 <- -1* log( - theta.vec2) 

## Null deviance
model.saturated <- sum((y * theta.vec2) - b.theta2) 
model.of.interest <- sum((y.vec * theta.vec) - b.theta) 


-2*( model.of.interest - model.saturated)

Reg.glm

## Confidence interval

Se.Mat <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)
sqrt(diag(Se.Mat))
summary (Reg.glm, dispersion =1.0)$coefficients

Se.Mat.Eta <- Xmat%*%Se.Mat%*%t(Xmat)

Se.Mat.Mu <- Dmat.Old%*%Se.Mat.Eta%*%t(Dmat.Old)

lowerbound.Mu <- exp( Xmat%*%Beta.Old ) - qnorm(0.975)*sqrt( diag(Se.Mat.Mu) )
upperbound.Mu <- exp( Xmat%*%Beta.Old ) + qnorm(0.975)*sqrt( diag(Se.Mat.Mu) )

conf.intervals <- cbind(lowerbound.Mu, upperbound.Mu)
conf.intervals[1:2,]

## Model 2 

Reg.glm <- glm( y ~ x1 + x2 + x3,family=Gamma(link='log') )

# Assign the starting values for the matrices
Xmat <- cbind(1, x1, x2, x3)
Beta.Old <- matrix( 0, nrow=4, ncol=1 )
Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
Vmat.Old <- Dmat.Old^2
Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
Mu.Old <- matrix( exp(Xmat%*%Beta.Old), ncol=1 )
Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%( y - Mu.Old )

# Run the IRLS
Tol <- 1
while( Tol>=1e-06 ){
  
  Beta.Upd <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)%*%t(Xmat)%*%Wmat.Old%*%Z.Old
  Tol <- max( abs(Beta.Upd-Beta.Old) )
  
  Beta.Old <- Beta.Upd
  Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
  Vmat.Old <- Dmat.Old^2
  Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
  Mu.Old <- matrix(exp(Xmat%*%Beta.Old), ncol = 1)
  Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%(y - Mu.Old)
}

y.vec <-  exp(Xmat%*%Beta.Old)
theta.vec <- -1 * (1/y.vec) 
b.theta <- -1* log( - theta.vec) 

log.lik <- sum((y.vec * theta.vec) - b.theta)

y.vec * theta.vec 
aic <- -2*log.lik + 2 *6
bic <- -2 * log.lik + log(nrow(Beta.Old))*6


theta.vec2 <- -1 * (1/y)
b.theta2 <- -1* log( - theta.vec2) 

## Residual deviance
model.saturated <- sum((y * theta.vec2) - b.theta2) 
model.of.interest <- sum((y.vec * theta.vec) - b.theta) 


-2*( model.of.interest - model.saturated)

## Dispersion parameter
summary(Reg.glm)
Dispersion.parameter <- sum((y - Mu.Old )^2 / diag(Vmat.Old))/196

Xmat <- cbind(1, x1, x2, x3)
Beta.Old <- matrix( 0, nrow=4, ncol=1 )
Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
Vmat.Old <- Dmat.Old^2
Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
Mu.Old <- matrix( exp(Xmat%*%Beta.Old), ncol=1 )
Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%( y - Mu.Old )

# Run the IRLS
Tol <- 1
while( Tol>=1e-06 ){
  
  Beta.Upd <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)%*%t(Xmat)%*%Wmat.Old%*%Z.Old
  Tol <- max( abs(Beta.Upd-Beta.Old) )
  
  Beta.Old <- Beta.Upd
  Dmat.Old <- diag( c(exp(Xmat%*%Beta.Old)) )
  Vmat.Old <- 1/(Dispersion.parameter) * (Dmat.Old^2)
  Wmat.Old <- Dmat.Old%*%diag(diag(solve(Vmat.Old)))%*%Dmat.Old
  Mu.Old <- matrix(exp(Xmat%*%Beta.Old), ncol = 1)
  Z.Old <- Xmat%*%Beta.Old + diag(diag(solve(Dmat.Old)))%*%(y - Mu.Old)
}

Se.Mat <- solve(t(Xmat)%*%Wmat.Old%*%Xmat)
sqrt(diag(Se.Mat))
summary (Reg.glm, dispersion =1/(Dispersion.parameter))$coefficients
